// Generated by CoffeeScript 1.9.3
var examinations;

importScripts('../vendor/lazy.min.js');

importScripts('../vendor/fetch.js');

importScripts('../vendor/moment.min.js');

importScripts('../vendor/moment-timezone.min.js');

importScripts('../config.js');

importScripts('common.js');

examinations = null;

self.addEventListener('message', function(e) {
  var data, not_ok, phone, res;
  data = e.data;
  switch (data.cmd) {
    case 'start':
      res = fetch('../../../' + route_uri('#to-fill') + '?just_data=1', {
        headers: {
          'Authorization': 'Basic ' + data.auth
        }
      });
      return res.then(check_status).then(function(resp) {
        return resp.json();
      }).then(function(json) {
        examinations = map_examinations(Lazy(json.data));
        return self.postMessage(['ok']);
      })["catch"](function(e) {
        console.log('get examinations error');
        return self.close();
      });
    case 'all':
      res = ['all', examinations.size()];
      if (data.count == null) {
        res.push(examinations.toArray());
      }
      return self.postMessage(res);
    case 'not-ok':
      not_ok = examinations.filter(function(v) {
        return v.to_complete;
      });
      res = ['not-ok', not_ok.size()];
      if (data.count == null) {
        res.push(not_ok.toArray());
      }
      return self.postMessage(res);
    case 'phone':
      phone = examinations.filter(function(v) {
        return v.qualifiesForPhone;
      });
      res = ['phone', phone.size()];
      if (data.count == null) {
        res.push(phone.toArray());
      }
      return self.postMessage(res);
  }
}, false);

//# sourceMappingURL=get_examinations.js.map
