<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
          http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
          http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
          http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd"
        >

    <context:annotation-config/>

    <context:component-scan base-package="ipmed.zbox">
        <context:exclude-filter type="regex" expression="ipmed\.zbox\.webservices\..*"/>
        <!--<context:exclude-filter type="regex" expression="ipmed\.zbox\.services\..*"/>-->
    </context:component-scan>

    <bean id="dbAccessor" class="ipmed.zbox.jobs.DBAccessor"/>

    <tx:annotation-driven proxy-target-class="true"/>
    <jpa:repositories base-package="ipmed.zbox.repositories" entity-manager-factory-ref="entityManagerFactory"/>

    <bean class="org.springframework.orm.jpa.JpaTransactionManager"
          id="transactionManager">
        <property name="entityManagerFactory"
                  ref="entityManagerFactory"/>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <qualifier value="transactionManager"/>
    </bean>

    <bean id="emailService" class="ipmed.zbox.utils.EmailService">
        <property name="login" value="${emailservice.login}"/>
        <property name="password" value="${emailservice.password}"/>
        <property name="mailSmtpAuth" value="${mail.smtp.auth}"/>
        <property name="mailSmtpStarttlsEnable" value="${mail.smtp.starttls.enable}"/>
        <property name="mailSmtpHost" value="${mail.smtp.host}"/>
        <property name="mailSmtpPort" value="${mail.smtp.port}"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="ipmed.zbox.entities"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="generateDdl" value="true"/>
                <property name="showSql" value="true"/>
                <property name="database" value="H2"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.hbm2ddl.import_files_sql_extractor">
                    org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
                </prop>
            </props>
        </property>
    </bean>

    <bean abstract="true" id="pathBean" class="java.nio.file.Paths" factory-method="get">
        <constructor-arg index="1">
            <array/>
        </constructor-arg>
    </bean>

    <bean id="directoryWatcher" class="ipmed.zbox.jobs.DirectoryWatcher">
        <constructor-arg index="0">
            <bean parent="pathBean">
                <constructor-arg type="java.lang.String" value="${dirwatcher.dir}"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="1">
            <bean parent="pathBean">
                <constructor-arg type="java.lang.String" value="${dirwatcher.hidden_dir}"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="2" ref="queue"/>
        <property name="statusSignaler" ref="statusSignaler"/>
    </bean>

    <bean id="usbWatcher" class="ipmed.zbox.jobs.UsbWatcher">
        <constructor-arg index="0">
            <bean parent="pathBean">
                <constructor-arg type="java.lang.String" value="${dirwatcher.hidden_dir}"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="1" ref="queue"/>
        <property name="statusSignaler" ref="statusSignaler"/>
    </bean>

    <bean id="connectionManager" class="ipmed.zbox.jobs.ConnectionManager">
        <constructor-arg index="0" type="java.lang.String" value="${connectionmanager.pingServerName}"/>
        <constructor-arg index="1" type="java.lang.String" value="${connectionmanager.connectCommand}"/>
        <constructor-arg index="2" type="java.lang.String" value="${connectionmanager.disconnectCommand}"/>
    </bean>

    <bean id="smsManager" class="ipmed.zbox.jobs.SmsManager">
        <constructor-arg index="0" type="java.lang.String" value="${smsmanager.comport}"/>
        <constructor-arg index="1" type="java.lang.String" value="${smsmanager.selfnumber}"/>
        <property name="tomcatRestartCommand" value="${smsmanager.tomcatrestartcommand}"/>
    </bean>

    <bean id="regularUpdater" class="ipmed.zbox.jobs.RegularUpdater">
        <property name="enabled" value="${regularupdater.enabled}"/>
        <property name="ftpAddress" value="${regularupdater.ftp_address}"/>
        <property name="ftpLogin" value="${regularupdater.ftp_login}"/>
        <property name="ftpPassword" value="${regularupdater.ftp_password}"/>
    </bean>

    <bean id="errorNotifier" class="ipmed.zbox.jobs.ErrorNotifier">
        <property name="ZBOX_ID" value="${zbox.id}"/>
        <property name="ZBOX_HOSPITAL" value="${zbox.hospital}"/>
        <property name="RETRY_TIME" value="${errornotifier.retrytime}"/>
        <property name="RETRY_COUNT" value="${errornotifier.retrycount}"/>
    </bean>

    <bean id="statusSignaler" class="ipmed.zbox.utils.SoundVisualSignaler">
        <constructor-arg type="java.lang.String" value="${soundvisualloopback.execpath}"/>
    </bean>

    <bean id="queue" class="ipmed.zbox.repositories.MeasurementQueue">
        <constructor-arg>
            <bean parent="pathBean">
                <constructor-arg type="java.lang.String" value="${queue.location}"/>
            </bean>
        </constructor-arg>
    </bean>

    <sec:http auto-config="true" use-expressions="true" create-session="stateless">
        <sec:http-basic/>
        <sec:intercept-url pattern="/media/**" access="permitAll"/>
        <sec:intercept-url pattern="/resources/**" access="hasRole('ROLE_ZBOX_ADMIN')"/>
        <sec:intercept-url pattern="/users/**" access="hasRole('ROLE_ZBOX_ADMIN')"/>
        <sec:intercept-url pattern="/trylogin" access="permitAll"/>
        <sec:intercept-url pattern="/" access="permitAll"/>
        <sec:intercept-url pattern="/**" access="hasRole('ROLE_ZBOX_USER')"/>
    </sec:http>

    <bean name="bcryptEncoder"
          class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <sec:authentication-manager>
        <sec:authentication-provider user-service-ref="zboxUserDetailsManager">
            <sec:password-encoder ref="bcryptEncoder"/>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <bean id="zboxUserDetailsManager" class="ipmed.zbox.security.ZboxUserDetailsManager">
        <property name="dataSource" ref="passwordDataSource"/>
    </bean>

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <mvc:resources mapping="/media/**" location="/resources/media/"/>
    <mvc:resources mapping="/resources/**" location="/resources/"/>

</beans>